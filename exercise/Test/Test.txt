· 프로그래밍 언어활용 서술형

1. 오버라이딩 성립 요건(4가지)에 대해 기술하시오 (20점)
 ->
 오버라이딩의 성립요건 첫 번째는, 클래스 간의 상속관계에서 발현된다는 것이다. 예를 들어, class A extends B와 같이 클래스 A가 B로부터 상속받는 관계에서 오버라이딩이 가능하다.
 두 번째는, 부모클래스(Super Class)와 자식클래스(Derived Class)의 매서드(Method)명이 동일할 때 오버라이딩이 가능하다. 예를 들어, public void getBonus()와 같은 메서드명이 부모클래스에 존재한다면 자식클래스에서도 public void getBonus()와 같이 동일한 메스드 명이 존재해야만 오버라이딩이 가능하다.
 세 번째는, 메서드에 들어갈 파라미터가 없다는 것이다.
 네 번째는, Return값이 없는 void형에서만 가능하다는 것이다.

2. 생성자(Constructor)의 정의와 생성자 규칙(4가지)에 대해 서술하시오. (35점)
->
 생성자란 클래스를 생성하고 메서드를 생성할 때 메서드명과 클래스명이 같은 것으로, 기본적으로 생성되는 디폴트 생성자와, 매개변수를 통해 setter보다 앞서 값을 지정할 수 있는 생성자로 구분된다. 매개변수를 이용하는 생성자는 getter/setter의 사용 없이 일괄적으로 자료를 처리할 수 있다는 장점을 갖는다.
 생성자 규칙 첫 번째는, 메서드명이 클래스 명과 같아야 한다는 점이다.
 두 번째는, 디폴트 생성자는 명시적으로 지정해주지 않아도 자동으로 생성된다는 점이다. 명시적으로 생성자를 생성할 시엔 메서드 명만을 선언할 뿐 중괄호 안에 내용을 선언하거나 매개변수를 받을 수 없다.
 세 번째는, 매개변수를 통해 값을 받는 생성자는 void형은 사용할 수 없기에 반드시 return값을 가지며 클래스 내에 선언한 멤버필드를 this를 통해 지정해주어야 한다.
 네 번째는, 생성자는 main메서드와 생명주기를 함께한다는 것이다.

3. 변수의 자료형 중 참조 자료형(Reference Type)의 특징을 2가지 서술하시오 (10점) 
 ->
 참조자료형의 특징 첫 번째는, 일반적인 자료형이 메모리의 stack영역에 할당되는 것에 비해, Heap 영역에 할당(동적할당)된다는 점이다.
 두 번째 특징은 변수의 값이 Heap 영역의 주소값을 참조한다는 점이다.

4. 접근제한자가 무엇인지 서술하고 필드에 사용할 수 있는 접근제한자의 접근 가능 범위에 대해 간략하게 서술하시오 (35점)
 ->
 접근제한자란 클래스, 변수, 메서드를 선언할 시 제일 앞부분에 선언하여 클래스, 변수, 메서드에 접근을 제한하여 캡슐화, 정보은닉 등의 기능을 실현하려는 목적으로 사용한다.
 접근제한자의 public은 클래스 간, 패키지 간에 접근의 제약이 없이, 어느 곳에서든 사용가능하도록 하는 접근제한자이다.
 private은 가장 보수적인 접근제한자로서, 사용 시 클래스 간, 패키지 간은 물론이며, 변수에 private을 사용하는 클래스가 있다면 다른 클래스에서 import하여도 접근이 불가능한 접근제한자이다.
 package는 같인 패키지(폴더) 내에서만 접근이 가능한 접근제한자이다.
 protected는 같은 패키지 내에서는 접근을 허용하지만, 다른 패키지는 접근 허용하지 않으나 import해서 상속을 받으면 접근 허용하는 접근제한자이다.